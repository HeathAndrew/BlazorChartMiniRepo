@using ApexCharts
@using BlazorStrap;
@using BlazorTestApp.Shared
<div class="MainGrid">
    <div class="GraphArea">
        <div class="@(GraphGridClass)">
            <div class="GraphOneArea">
                <div style="height:100%;background-color:#0e1117;">
                    <ApexChart TItem="Data"
                               Height="@("100%")"
                               @ref="Chart"
                               Options="ChartOptionsChannel1"
                               XAxisType="XAxisType.Numeric">
                        <ChildContent>
                            <ApexPointSeries TItem="Data"
                                             Items="@ChartData"
                                             SeriesType="SeriesType.Line"
                                             XValue="@(e => e.xValue)"
                                             YValue="@(e => (decimal)e.yValue)"
                                             Stroke="@(new ApexCharts.SeriesStroke {Color = "#00aeef", Width = 1,})" />

                        </ChildContent>
                    </ApexChart>
                </div>
            </div>
        </div>
    </div>
    <div class="ControlArea">
        <BSContainer style="padding-top:5%;padding-left:5%;">
            <hr class="w-100" />
            <BSRow Gutters="BlazorStrap.Gutters.None" Class="ControlRow">
                <BSButton @onclick="GetData" Color="BlazorStrap.BSColor.Primary">Load Data</BSButton>
            </BSRow>
            <hr class="w-100" />

            <BSRow Gutters="BlazorStrap.Gutters.None" Class="ControlRow">
                <BSCol Class="text-end vert-align">
                    Cursor Select
                </BSCol>
                <BSCol>
                    <BSDropdown>
                        <Toggler><BSToggle IsButton="true" Color="BlazorStrap.BSColor.Primary" style="width:160px;">@SelectedChannel.ToString()</BSToggle></Toggler>
                        <Content>
                            <BSDropdownItem @onclick="() => SetSelectedChannel(Channels.None)">None</BSDropdownItem>
                            <BSDropdownItem IsDivider="true" />
                            <BSDropdownItem @onclick="() => SetSelectedChannel(Channels.Amp1Channel1)">Amp 1 Channel 1</BSDropdownItem>

                            <BSDropdownItem @onclick="() => SetSelectedChannel(Channels.Time1Channel1)">Time 1 Channel 1</BSDropdownItem>
                            <BSDropdownItem @onclick="() => SetSelectedChannel(Channels.Time2Channel1)">Time 2 Channel 1</BSDropdownItem>
                            <BSDropdownItem IsDivider="true" />
                            <BSDropdownItem @onclick="() => SetSelectedChannel(Channels.Amp1Channel2)">Amp 1 Channel 2</BSDropdownItem>

                            <BSDropdownItem @onclick="() => SetSelectedChannel(Channels.Time1Channel2)">Time 1 Channel 2</BSDropdownItem>
                            <BSDropdownItem @onclick="() => SetSelectedChannel(Channels.Time2Channel2)">Time 2 Channel 2</BSDropdownItem>
                        </Content>
                    </BSDropdown>
                </BSCol>
            </BSRow>
            <hr class="w-100" />
            <BSRow Gutters="BlazorStrap.Gutters.None" Class="ControlRow">
                Cursor Adjust
            </BSRow>
            <BSRow Gutters="BlazorStrap.Gutters.None" Class="ControlRow">
                <BSCol Column="2">
                    <BSButton Color="BlazorStrap.BSColor.Warning" @onclick="() => CursorAdjust(-100)">---</BSButton>
                </BSCol>
                <BSCol Column="2">
                    <BSButton Color="BlazorStrap.BSColor.Warning" @onclick="() => CursorAdjust(-10)">--</BSButton>
                </BSCol>
                <BSCol Column="2">
                    <BSButton Color="BlazorStrap.BSColor.Warning" @onclick="() => CursorAdjust(-1)">-</BSButton>
                </BSCol>
                <BSCol Column="2">
                    <BSButton Color="BlazorStrap.BSColor.Success" @onclick="() => CursorAdjust(1)">+</BSButton>
                </BSCol>
                <BSCol Column="2">
                    <BSButton Color="BlazorStrap.BSColor.Success" @onclick="() => CursorAdjust(10)">++</BSButton>
                </BSCol>
                <BSCol Column="2">
                    <BSButton Color="BlazorStrap.BSColor.Success" @onclick="() => CursorAdjust(100)">+++</BSButton>
                </BSCol>
            </BSRow>
        </BSContainer>
    </div>
</div>
<BSModal DataId="modal1" @ref="modal1">
    <Header>6433-08 Magstim EMG test App</Header>
    <Content>
        <h6>COM Ports</h6>
        <hr />
        Select a COM port using the COM select option.
        <br />If the mentalab device isnt found the version number will look like @(modalMsg) or similar.
        <br />Load data when port selected.
        <br />
        <br />
        <h6>Cursors</h6>
        <hr />
        Select a cursor with the cursor select area and adjust with the yellow and green buttons.
        <br />
        <br />
        <h6>RMS</h6>
        <hr />
        The rms channel will calculate the rms between the time cursors.
        <br />The bounded value will calculate between the supplied values and be displayed seperatley.
        <br />
        <hr />
        Export is located under File.
        <hr />
        To close the application use the option under file or press the X button
        <hr />
        Any issues contact Andrew

    </Content>
    <Footer Context="modal">
        <BSButton MarginStart="Margins.Auto" Color="BSColor.Secondary" @onclick="modal.HideAsync">Close</BSButton>
    </Footer>
</BSModal>
<style>
    body {
        background-color: #2f2f2f;
        color: white;
        height: 98vh;
    }

    #app {
        height: 100%;
    }

    .MainGrid {
        display: grid;
        grid-template-columns: 75% 25%;
        grid-template-rows: 1fr;
        grid-auto-columns: 1fr;
        gap: 0px 1px;
        grid-auto-flow: row;
        grid-template-areas:
            "GraphArea ControlArea";
        height: 100%;
        width: 98vw;
    }

    .GraphArea {
        grid-area: GraphArea;
        height: 100%;
    }

    .ControlArea {
        grid-area: ControlArea;
    }

    .GraphGrid {
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: 95%;
        grid-auto-columns: 1fr;
        gap: 0px 1px;
        grid-auto-flow: row;
        grid-template-areas:
            "GraphOneArea";
        height: 100%;
        padding-top:5%;
    }
    .vert-align {
        height: 44px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .GraphOneArea {
        grid-area: GraphOneArea;
        border: 1px solid #ffffff;
    }
</style>